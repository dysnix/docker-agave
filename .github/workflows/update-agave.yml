name: Update from upstream
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

env:
  AGAVE_VERSION_REGEX: "v3\\.[0-9]+\\.[0-9]+$"
  AGAVE_REPO: anza-xyz/agave

jobs:
  fetch:
    name: Fetch new tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.latest.outputs.tag }}
      upstream_tag: ${{ steps.upstream.outputs.tag }}
      newer: ${{ steps.latest.outputs.newer }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get upstream tags
      uses: dysnix/find-latest-tag@v1
      id: upstream
      with:
        releases-only: true
        regex: ${{ env.AGAVE_VERSION_REGEX }}
        repository: ${{ env.AGAVE_REPO }}

    - name: Get local tags
      uses: dysnix/find-latest-tag@v1
      id: latest
      with:
        compared-to-tag: ${{ steps.upstream.outputs.tag }}
        regex: ${{ env.AGAVE_VERSION_REGEX }}
        repository: ${{ github.repository }}

  docker:
    needs: [fetch]
    if: needs.fetch.outputs.newer == 'true' || needs.fetch.outputs.tag == ''
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      docker_tags: ${{ steps.meta.outputs.tags }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=${{ needs.fetch.outputs.upstream_tag }}
          type=raw,value=latest

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        build-args: |
          AGAVE_VERSION=${{ needs.fetch.outputs.upstream_tag }}
          AGAVE_REPO=${{ env.AGAVE_REPO }}

  release:
    needs: [fetch, docker]
    if: needs.fetch.outputs.newer == 'true' || needs.fetch.outputs.tag == ''
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ github.event.repository.name }} ${{ needs.fetch.outputs.upstream_tag }}
        tag: ${{ needs.fetch.outputs.upstream_tag }}
        commit: ${{ github.sha }}
        generateReleaseNotes: true
        allowUpdates: true
        body: |
          ## Docker images
          ```
          ${{ needs.docker.outputs.docker_tags }}
          ```
